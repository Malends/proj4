from django.test import TestCase
from .models import Review


class ReviewModelTests(TestCase):

    def test_check_cases_used(self):
        self.maxDiff = None
        raw_text = "ОБРАТИлись с бронхитом , лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели . Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!!"

        expected = "Обратились с бронхитом , лечение которого различные доктора (педиатр, лор) не могли назначить " \
                   "корректно в течение недели . Валерий николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!!"
        edited = Review.check_cases(raw_text)
        self.assertEqual(edited, expected)

    def test_check_cases_not_used(self):
        self.maxDiff = None
        raw_text = "Обратились с бронхитом , лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели . Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!!"

        expected = "Обратились с бронхитом , лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели . Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!!"
        edited = Review.check_cases(raw_text)
        self.assertEqual(edited, expected)

    def test_check_cases_more_spaces(self):
        self.maxDiff = None
        raw_text = "ОБРАТИлись с бронхитом ,   лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели . Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!!"

        expected = "Обратились с бронхитом ,   лечение которого различные доктора (педиатр, лор) не могли назначить " \
                   "корректно в течение недели . Валерий николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!!"
        edited = Review.check_cases(raw_text)
        self.assertEqual(edited, expected)

    def test_check_spaces_and_punctuation_used(self):
        self.maxDiff = None
        raw_text = "Обратились с бронхитом ,   лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели . Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!!"

        expected = "Обратились с бронхитом, лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели. Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное! "
        edited = Review.check_spaces_and_punctuation(raw_text)
        self.assertEqual(edited, expected)

    def test_check_spaces_and_punctuation_not_used(self):
        self.maxDiff = None
        raw_text = "Обратились с бронхитом, лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели. Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное!"

        expected = "Обратились с бронхитом, лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели. Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное! "
        edited = Review.check_spaces_and_punctuation(raw_text)
        self.assertEqual(edited, expected)

    def test_check_spaces_and_punctuation_more_spaces_and_symbols(self):
        self.maxDiff = None
        raw_text = "Обратились с бронхитом ,    лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели . Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное  !!!!!"

        expected = "Обратились с бронхитом, лечение которого различные доктора (педиатр, ЛОР) не могли назначить " \
                   "корректно в течение недели. Валерий Николаевич всё подробно объяснил и назначил нужное лечение. " \
                   "Спасибо ему огромное! "
        edited = Review.check_spaces_and_punctuation(raw_text)
        self.assertEqual(edited, expected)
